# Changelog
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [1.0.0] - 2020-09-30
### Added 'REACT'
    - JSX viene compilato in JS puro (transpiling)
    - Importanza del return
    - Return del Render method (UNO SOLO), funzione che si occupa di quello che viene mostrato a video
        giocare con la condizione per ovviare al problema del render method da usare una sola volta
        sintassi render methos nel render method: ${isEven(n1) ? 'pari' : 'dispari'};
                                                               ?  TRUE : FALSE; (obbligatorio la valutazione di true e false)
    - operatore % restituisce il resto


## [1.0.0] - 2020-09-29
### Added 'JAVASCRIPT'
    - Promises
        let variabile= new Promise(function(resolve,reject){'blocco codice'})
            Funzione esecutrice, eseguita immediatamente
            resolve e reject sono parametri-funzione
        state -> inizia col valore di pending a fullfilled se tutto va bene
            una volta raggiunto un certo stato, quest'ultimo non verrà più cambiato (fulfilled o rejected)
        result -> vale undefined inizialmente
        .then è una funzione che accetta a sua volta due funzioni
            permette di modulare meglio il codice
        Verrà gestito solo un resolve/reject per volta
        .catch 'afferra' l'errore
        chaining: collegare più then non ad un'unica promise
            il return restituisce in maniera implicita una nuova promise
            (thenable)

## [1.0.0] - 2020-09-28
### Added 'JAVASCRIPT'
    - Arrow function es. (a,b) => a+b;
        return è implicito senza {} e unica riga di codice
        nel caso di più istruzioni: () => {blocco codice e return non implicito}
    - Asincronia
        prescinde dal caricamento del DOM in pratica
        callback è una funzione che viene richiamata dopo
        onerror, se intercetta errore esegue un'altra callback (nel caso di onload ne esegue un'altra)
            new Error(), oggetto di tipo errore
        Piramide infernale per indicare lo sviluppo in orizzontale

## [1.0.0] - 2020-09-24
### Added 'REACT'
    - Componenti funzionali rendono più veloci il browser
    - Creazione di interfacce utente interattive manipolando il DOM, gestendo il lato logico dei dati
    - React può convivere con altre tecnologie
    - extends: quello che andremo a creare con il costruttore class, si comporterà componente REACT -> 'extends React.Components'
    - render()
    - Funzione map()
    - JSX - diversa sintassi da JS puro
    - 'root' di base corrisponde al body, il crawler di Google vede l'albero del body con id 'root'
    - create-react-app esempioUno --use-npm con Node (https://www.npmjs.com/)
        *dependencies -> pacchetti necessari per React
    - npm
        start -> faccio partire il server che mi dà localhost:port
        run build
        test
        i (sta per install) -> va nel package.json, legge le dependencies e installa il pacchetto aggiornato o aggiunto
    - package.json indica tutte le informazioni fondamentali del progetto
        dependencies*
            -> per esempio material-ui per l'estetica
    - package-lock.json -> viene generato alla prima installazione del pacchetto, 'NON DEVE MAI ESSERE MODIFICATO A MANO'
    - major, minor, bug fixing -> versionamento
    

## [1.0.0] - 2020-09-22
### Added 'JAVASCRIPT'
    - let nome1 = "Luca" stringa letterale, let nome2 = new String("Luca") oggetto che contiene una stringa;
    - attenzione all'uguaglianza tra i numeri es. 0.1+0.33;
    - Number.MIN_VALUE numero più piccolo vicino allo 0;
    - Classe è, in parole povere, un modello da cui trarre delle copie
        class Messaggio {handleEvent(event){codice}}
        es. copia -> let messaggino = new Messaggio();
    - switch più performante per richieste numerose;
    - Gestione eventi II
        Bubble phase -> "bolla" che viene su, da dove avviene la gestione dell'evento
            interrompere la bubble phase -> if (event.currentTarget.nodeName == "elemento") {event.stopPropagation()};
        Capture phase -> fase di "caduta" (non dovrebbe essere gestibile con gli onclick, ma tramite l'addEventListener)
            elemento1.addEventListener('evento', funzione, true) {capture:true}
            elemento2.addEventListener('evento', funzione, true) {capture:true}
            elemento3.addEventListener('evento', funzione, true) {capture:true}
            Se il terzo parametro dell'addEventListener è false impostiamo la Bubble phase
        target -> il target è colui che genera l'evento;
        currentTarget -> è colui che gestisce l'elemento; 
        event.target.nodeName -> nome del target
        event.eventPhase -> fase dell'evento
            fase 1: parte dal documento e parsa gli elementi in caduta ('Capture phase') 
            fase 2: chi subisce l'evento è anche quello che lo gestisce ('Target phase')
            fase 3: in risalita, quindi Bubble


## [1.0.0] - 2020-09-21
### Added 'JAVASCRIPT'
    - Gestione eventi mouse
        Sovrascrittura: non supporta più di un handler;
        b1.onclick=funzione() [con le parentesi quadre] dà null, quindi richiamare senza parantesi - caso di funzione non parametrizzata;
        setAttribute('onclick', "funzione()") versione giusta;
        elemento.onclick = () => alert('qualcosa') (terzo modo per definire una funzione in JS, con o senza parentesi graffe);
        elemento.addEventListener('evento', funzione senza tonde, terzo parametro facoltativo), non sovrascrive (integrativa, non esclusiva)
            terzo parametro addEventListener: {once:true} -> attivo una volta, dopo la prima volta si disattiva da solo
            "DOMContentLoaded", al caricamento dei contenuti del DOM, riferendosi ai nodi HTML (non caricamento di file esterno, es. img)
                può essere gestito solo con l'addEventListener
        elemento.removeEventListener('evento', funzione senza tonde)
        event -> un oggetto con una serie di proprietà
            event.type -> nome dell'evento in stringa (tipo di evento gestito)
            event.clientX e event.clientY (coordinate X e Y del mouse)
            event.currentTarget (corrisponde al this)
    - let customObject = {function nome(parametri) {codice}};

    - Debug Console di VSC

## [1.0.0] - 2020-09-15
### Added 'JAVASCRIPT'
    - Spiegazione esempio interface_2
        new Image() -> oggetto logico (classe) che mi restituisce un'immagine
        this.onclick = null -> (esempio rimozione elemento dal DOM) annulla la funzione associata in radice dopo aver rimosso un elemento, così siamo sicuri che vengono anche rimossi gli eventi gestiti

## [1.0.0] - 2020-09-14
### Added 'PROJECT WORK'
    - Vanno bene Js puro, React e Vue;
    - Sarà un'applicazione single-page di recensioni di film (Master Detail App)
        "SOLO UNA PAGINA HTML"
    - Dinamicamente
        Dati presi dinamicamente, da una sorgente esterna
        Riquadri che contengono le recensioni di esperti e i dati dei film presi esternamente
        Formattazione JSON (se argomento ancora non affrontato, utilizzare momentaneamente un array di oggetti)
        Di dafault, un riquadro con la lista di tutti i film, cliccando su un film mi dà in output il dettaglio del film (più tasto BACK per tornare alla lista)
        Responsive
    - Browser 
        Chrome, Firefox, Edge


## [1.0.0] - 2020-09-11
### Added 'Sicurezza sul lavoro'
    - Covid 19
        'Il Covid in azienda è un infortunio sul lavoro';

        'Il datore di lavoro è responsabile se ha agito con dolo o colpa';

        'La mascherina è un dpi ed è obbligatoria' (nel senso che te la devono fornirla) 4 ore;

        "Se ho la febbre superiore ai 37,5 gradi non posso accedere in azienda e deve essere"
        "informato il medico di base. L'azienda tiene"
        "i dati conservati per almeno 14 gg";

        "Il personale che rientra in azienda dopo il covid deve avere una certificazione medica"
        "da cui risulti l'avvenuta negativizzazione del tampone";

    - Videoterminale VDT 
        Colui che lavora almeno 24 ore a settimana;

        "Deve fare delle pause ogni 2 ore dal computer di 15 minuti" intesa come attività diverse dalla lettura del vdt;

        "Illuminazione del video del computer deve garantire un contrasto appropriato tra schermo e ambiente";

        "Quando cambio il toner della fotocopiatrice devo usare guanti e mascherina";

    - Incendio / Terremoto / Piano d'emergenza (Addetto al primo soccorso - incendio)
        Solido, liquido, gas;

        Estintori polivalenti ABC "dura al massimo 15 secondi e spegne un fuoco alto al massimo 1 mt"
        "e posso operare a distanza di 1 mt, si blocca oltre i 60 gradi"
        "A - Solido, B - Liquido, C - Gas";

        L'estintore lo usa chi ha fatto un corso ed è scelto dall'azienda;

        Estintori ad "anidride carbonica CO2 (Elettriche)";

        "Solo le aziende che hanno più di 10 dipendenti devono avere un piano d'emergenza"
        ma tutte le aziende devono avere la "luce d'emergenza e la cartellonistica"
        "(i cartelli con colore rosso mi indicano un divieto)";

        "Uscite di emergenza non devono essere mai bloccate o ostacolate da mezzi e merci";

        "In caso di terremoto, mi posiziono sotto un tavolo e aspetto che le scosse terminino",
        "poi attuo il piano evacuazione";

        "Gli armadi superiori ai 2 mt devono essere fissati al muro";

        "Il lavoratore utilizza scale a norma se l'altezza è inferiore ai 2 mt"
        (se l'altezza è superiore a 2 mt occorre fare un corso);

        Donna può sollevare 20 kg
        Uomo può sollevare 25 kg
        Il minorenne o > 55enne riduce di 5 kg
        "Il danno alla schiena lo avrò sempre indipendentemente dal peso se piego la schiena";

        "Mani bagnate conduttori di elettricità";

        Astensione obbligatoia per 5 mesi
        Rischio soggettivo della gravidanza (può aumentare astensione), donna sta a casa da subito
        Rischio oggettivo legato all'azienda o alla mansione
        "se una lavoratrice ha un lavoro full time, ha diritto a due ore di permesso giornaliero per allattamento";


## [1.0.0] - 2020-09-10
### Added 'JAVASCRIPT'
    - Spiegazione esempio interface_1
    - click evento dato dalla sommatoria di mouseup e mousedown
    - 'this' riferimento automatico a chi ha gestito l'evento
    - onload -> al momento del caricamento completato

## [1.0.0] - 2020-09-07
### Added 'JAVASCRIPT'
    - document.createTextNode('testo') -> come createElement ma crea un nodo testuale
    - elemento.before("testo", document.createElement('a'), document.createElement('span'))
        si possono creare diversi elementi siblings con la stessa istruzione (funziona anche con after etc)
    - elemento.remove() -> rimuove l'elemento
    - document.body.insertAdjacentHTML("proprietà", "<tag>testo</tag>") o insertAdjacentText (funziona anche in IE)
        afterbegin -> inserisci come primo elemento figlio
        beforeend -> inserisci come ultimo elemento figlio
        beforebegin -> inserisci prima del tag di apertura, fratello
        afterend -> inserisci dopo il tag di chiusura, fratello
    - elemento.insertAdjacentElement("proprietà", variabile elemento)
    - Math.random() * numero -> numero casuale estratto da range tra 0 e numero
        Il Math.random() restituisce un valore tra 0 e 1, 1 escluso -> [0,1) 
    - Math.floor() -> toglie la parte decimale, porta il numero intero più vicino dal basso (contrario di Math.ceil())
    - Math.round() -> arrotonda       


## [1.0.0] - 2020-09-04
### Added 'JAVASCRIPT'
    - getComputedStyle -> oggetto con le informazioni cssDeclaration in lettura (a prescindere se siano stati definiti in style e in classi)
        oggetto di SOLA LETTURA 
        tiene conto della specificità e dell'ereditarietà del CSS
    - Provare su vari browser (alcune proprietà non funzionano su diversi browser);
    - Sintassi alternativa
        esempio: divStyle["margin-left"]
        esempio: divStyle.getPropertyValue('margin-left')
    - Pseudo classi o pseudo elementi
        pseudoDivStyle = getComputedStyle(div1, ':pseudo-classe o ::pseudo-elemento');
    - parseInt() funzione che restituisce un numero intero da un valore (a prescindere dal tipo)
    - Creare elementi DOM in run-time
       let div1 = document.createElement('div') crea l'elemento con tag div, ma ancora non è nel body
       document.body.append(div1) -> figlio di body in coda rispetto ai figli che sono già presenti
       let p1 = document.createElement('p');
       div1.append(p1) -> il p1 quindi <p> diventa figlio dell'elemento div1 <div> precedente
       append(STRINGA) -> append di un nodo testuale
       prepend() -> inserisce in testa l'elemento child
       before() -> sibling dell'elemento, inserito appena prima
       after() -> sibling dell'elemento, inserito appena dopo
       elemento.replaceWith(parametro) -> rimpiazzo l'elemento di riferimento (a sx) con l'elemento in parametro    

## [1.0.0] - 2020-09-03
### Added 'Sicurezza sul lavoro'
    - Sicurezza: DLGS 81/2008 o Testo unico
    - Protezione fisica (infortunio o malattia professionale) e psicologica
        "infortunio è una lesione (ferita visibile/riscontrabile anche con strumenti) violenta (immediata all'azione) in occasione di lavoro (azienda - trasferte - formazione - inf. in itinere)" 
        che determina un'inabilità al lavoro temporanea o permanente o morte;
        Malattia professionale (tabellate) deriva dal lavoro (ci mette del tempo)

    - Psicologica (Stress da lavoro correlato)
    - Volontario, stagista, tirocinante (tirocinio non a seguito di un corso di formazione), contratto
    - Criteri principali
        1) Il lavoratore deve essere protetto da 'DPC (dispositivi di protezione collettiva)' e da
        'DPI (dispositivi di protezione individuale)', ma il 'collettivo è più importante di quello individuale' (grembiule di cuoio macellaio);
        fornito dal datore di lavoro
        2) Lavorato informato, 'formato' e addestrato
            Formazione: 'docente, registro, quiz con valutazione, attestato'
            Formazione parte teorica e addestramento parte pratica
            Formato in base al rischio (probabilità statistica e prognosi):
                basso (grafici) 4 + 4, medio (agricoltori - professori) 4 + 8, alto (edili, chimici, metalmeccanici, nucleari) 4 + 12
            Il 'datore di lavoro' è obbligato a redigere (o un consulente, ma la firma è del datore di lavoro) il 'documento di valutazione dei rischi (DVR)':
            valuta il rischio di ogni mansione professionale
            Il DL e RSPP ha responsibilità penali (prognosi > 40 gg), civili (ris. danni) e amministrative (multe)
            previene i rischi e proteggere
            'Prevenire': 'coinvolgere tutti i soggetti'
            'DL aiutato dal RSPP (responsabile del servizio prevenzione e protezione)'
            RSPP può essere interno (corso) e di fiducia, fa rispettare le norme
            MEDICO COMPETENTE (preventive) - cartella sanitaria
            'RLS (rappresentante dei lavoratori per la sicurezza)'
                'accede agli ambienti di lavoro'
                'sentito per la valutazione dei rischi'
                'vigila sulla realizzazione delle misure di tutela'
            'Addetto al primo soccorso, chiama 118, nominato da DL'
            'Addetto al servizio anti-incendio, nominato da DL'
            PREPOSTO  è il superiore gerarchico che fa rispettare le norme di sicurezza
            'Il lavoratore osserva le disposizioni impartiti dal DL o dal preposto, utilizzo i dpi, non rimuovere i sistemi di sicurezza'
    - Protezione economica: I NA I L (Istituto Nazionale Infortuni sul Lavoro)
        Lucro cessante (stipendio), prendo lo stipendio ma non lavoro a causa di un infortunio
        Danno emergente, danno sottitinteso fisico o psicologico che deriva da infortunio o malattia professionale
        Danno biologico, sofferenze fisiche o psicologiche derivanti da un danno permanente, 'paga danni fisici/psicologici ma non paga i danni materiali'
            '-- invalidità (Inail riconosce la franchigia)'
                0% al 5% -> pagato 0
                6% al 15% -> una tantum
                16% al 100% -> pensione che varierà a seconda del danno e reddito (max 26k lordi annuali)


## [1.0.0] - 2020-09-02
### Added 'JAVASCRIPT'
    - Manipolare gli stili
        sia a livelo di attributo class="" sia di style=""
        elemento.className -> con className sto già gestendo una classe e mi ritorna il nome della classe dell'attributo html
        elemento.item(0).className -> item() è simile alle [] per accedere alle collection array-like
        elemento.classList -> un oggetto, una sorta di collection che contiene n classi associate ad un determinato elemento
            -- add() aggiungo delle classi
            -- contains() proprietà per classe associata
            -- remove() rimuove le classi
            -- toggle(), attiva (se la classe non c'è) o disattiva (se la classe c'è) una classe
        elemento.style -> manipoliamo l'attributo style (le proprietà oggetto per manipolare lo stile usano il camelCase)
            -- width
            -- height
            -- display
            -- backgroundColor
            -- textCss = "" -> testo in stringa dell'attributo style che va a sostituire il testo dello style
        elemento.setAttribute("style", "") -> questo è un'istruzione che viene usato anche per impstare attributi html
        getComputedStyle(elemento) -> mi restituisce un oggetto con info delle regole di stile applicate all'oggetto html e tiene conto anche dei valori di default,
        quindi tutto il codice computato sul tutto il CSS
    - ! NOT logico


## [1.0.0] - 2020-09-01
### Added 'JAVASCRIPT'
    - Discussione esercizio vacanze estive
    - substring: metodo per stringhe simile allo slice, prende un pezzo di stringa

## [1.0.0] - 2020-07-30
### Added 'JAVASCRIPT'
    - Proprietà
        innerHTML
        outerHTML, sostituire in toto un nodo
        nodeValue e data sono proprietà che restituiscono il contenuto di un nodo testuale
        textContent, testo completo privato dei tag
        hidden, true o false a seconda del fatto se l'elemento è nascosto o meno
        getElementByID
        proprietà oggetto window create automaticamente dalla mappatura
        window["stringa"]
        querySelectorAll('tutti i parametri css') -> restituisce una collection array-like
        querySelector('tutti i parametri css') -> restituisce il primo elemento di quel determinato selettore

    - Live collection: collection che si estende da sola, di pari passo con il parsing, a prescidere dalla posizione del tag script
        document.getElementsByTagName

    - Static collection:
        querySelectorAll('tutti i parametri css') -> restituisce una collection array-like
        querySelector('tutti i parametri css') -> restituisce il primo elemento di quel determinato selettore

    - Gestione tempo - temporizzatore
        setInterval(funzione, tempo in ms)
        clearInterval(variabile) -> elimina il setInterval            

## [1.0.0] - 2020-07-29
### Added 'JAVASCRIPT'
    - Core, DOM, BOM
    - Tool DOM Viewer http://software.hixie.ch/utilities/js/live-dom-viewer/
    - Element: tag nel parsing
    - Text (conta anche gli spazi, gli accapo etc): parte testuale nel parsing dove in genere finisce il "ramo dell'albero" del DOM
    - Nel parsing, JS non considera elementi nè parti testuali prima di head e dopo la chiusura del body
    - Ancestor, parent, child, sibling('fratelli')
    - Traversing
    - childNodes (indipendente dal tipo) -> collection è un object array-like
        parentNode
        firstChild
        lastChild
        siblings
            previousSibling                    
            nextSibling
    - Ereditarietà (di classi o super-classi)
        Event target
        Element
        HTMLElement
        .constructor.name -> mi dice da che tipo di classe proviene e il nome della classe da cui è stato costruito l'elemento
        elemento instanceof EventTarget/Node/Element/HTMLElement/HTMLButtonElement/HTMLBodyElement
        proprietà __proto__ -> __proto__.__proto__ e così via per ereditarietà
    - console.dir mi mostra la lista di metodi e prorietà riferita ad un determinato oggetto


                    
    - Array.from(document.body.childNodes) 'Array.from(oggetto)' metodo statico per generare l'array dall'object array-like della node-list
        quindi preferire un ciclo for of o ciclo for standard con gli iterabili
    - .children (oggetti dei nodi dei tag) II livello
        previousElementSibling 
        nextElementSibling
        parentElement
        firstElementChild
        lastElementChild




## [1.0.0] - 2020-07-27
### Added 'JAVASCRIPT'
    - ATTENZIONE: Dentro le graffe di una funzione posso dichiarare in locale una variabile omonima let (shadowing, vince la variabile locale)
    - Parametri della funzione sono delle variabili locali alla funzione (con let)
    - kw 'return'
    - Parallelismo JS Sass
        @function
            @function get-your-min($numbers...) i tre punti creano una lista
        @debug si vede nella console del prompt comandi
    - Rest parametri
    - Introduzione DOM
        Qualunque elemento diventa un oggetto
        Con js andiamo a manipolare oggetti, crearli e modificarli
        Child Nodes ('nodi dei figli')
            anche il testo all'interno del figlio rappresenta un nodo 



## [1.0.0] - 2020-07-24
### Added 'SASS'
    - Link utile path: https://katiek2.github.io/path-doc/
    - .scss .sass : con sass niente parente nè punti e virgola
    - 'Prompt comandi' -> cd percorso>sass scss:css
        per aggiornare -> sass --watch scss:css
        !global -> direttiva per variabile locale per renderla globale
        Nested rules
        _button.scss partial, modulino che può essere importato in altri file sass (@mixin è una sorta di routine)
        mixin_0.scss -> @import "button" (importo il file _button.scss) -> @include simple-button
        la &:pseudo-classe si riferisce al parent
        @use importi i file e puoi usare le pseudo funzioni come metodi
    - Stringhe in sass possono essere scritte anche senza virgolette


## [1.0.0] - 2020-07-23
### Added 'JAVASCRIPT'
    - Generator
    - delete mantiene il lenght nonostante cancelli l'elemento dall'array
    - splice (che serve a rimuovere degli elementi) può aiutare ad aggiungere elementi in mezzo all'array
    - slice copia una porzione (o tutti gli elementi) dell'array per valore
    - [Symbol.isContentSpreadable]:true permette la concatenazione estendibile ad un oggetto array-like
    - Function viene eseguita se e solo se viene richiamata
        Di per sè non deve avere dipendenze con valori esterni

## [1.0.0] - 2020-07-22
### Added 'JAVASCRIPT'
    - Array 
        Contenitore 'ordinato' di variabili, ottimizza l'uso della memoria
        Indice numerico da 0
        lenght è l'indice più alto (ultimo elemento) + 1 (non è propriamente la "lunghezza" dell'array)
        Queue: coda, ho la possibilità di inserire/rimuovere a capo o alla fine
        Stack, immaginatela come una coda verticale e hai un'azione sulla parte finale
        Ciclo for semplice dell'array
        Ciclo 'for of' per EMS6 usato con l'array (Single iterator)
            Symbol.iterator permette all'array l'uso di for of


## [1.0.0] - 2020-07-21
### Added 'JAVASCRIPT'
    - Con gli oggetti, la copia avviene per riferimento (rispetto alla stringa che è valore primitivo)
        Differenza di comportamento è solo tra dati primitivi e oggetti
        Object.assign(omonimo, persona) -> omonimo copia effettiva di persona in maniera 'svincolata', non vale la copia per riferimento
            -- Oggetto interno ad un oggetto copia per riferimenti anche con Object.assign
        https://lodash.com/docs/4.17.15#cloneDeep
        Object.keys(nome oggetto) dà un array con l'elenco delle proprietà di un oggetto 
        Object.values(nome oggetto) dà un array con l'elenco dei valori delle proprietà di un oggetto
        Object.entries(nome oggetto) dà un array con sottoinsiemi formati da nome proprietà e valore 

## [1.0.0] - 2020-07-16
### Added 'CSS3'
    - transform: rotateZ (5deg)
        translate sposta sugli assi
        overflow:hidden
        skew 'rendi obliquo'
        perspective 'prospettiva'
    - border-radius
    - float 'galleggiare'
        L'elemento si stacca dal DOM e si posiziona 'galleggiando' verso dx o vero sx
    - transition
    - animation
    - flexbox: sistema che permette di posizionare gli elementi
        display:flex sul parent, gli elementi children diventano 'flex items'
        flex-wrap:wrap rende responsive il flex
        flex-direction
        align-items
        justify-content
        flex-grow
    - height: 100vh (viewport height)
        

## [1.0.0] - 2020-07-15
### Added 'JAVASCRIPT'
    - Su Internet Explorer potrebbe non funzionare la kw variabile "let" (compatibilità con vecchi browser)
        Transpiler https://babeljs.io/
        Polyfill
    - Scopo di una variabile
       Con var la variabile non è 'localizzata' (può essere usata al di fuori dell'ambiente in cui è stata creata), ma è raccomandato il let per il contrario
       Con var posso dichiarare più volte la stessa variabile sovrascrivendo i valori, rispetto a let è più permissiva
    - Hoisting: "portare su" solo le dichiarazioni delle variabili
        Js ha la visibilità della variabili anche se ancora non sono state dichiarate
    - Template literals
        Quando uso "" (doppie virgolette), inserire /n per forza l'accapo
        Quando uso `` (backtick) l'accapo viene rappresentato automaticamente
    - Oggetto
        new Object() è un 'costruttore' quindi inizializzato con il new
        persona = {} è un 'oggetto letterale' quindi costruito con le graffe
        ciclo for di un oggetto - come si scrive:   for ('let' prop 'in' persona) 
                                                    {console.log(prop); console.log(persona[prop])}

## [1.0.0] - 2020-07-14
### Added 'CSS3'
    - Class nel body per dare regole in specifiche pagine 
    - Media queries utili nel responsive
        meta tag viewport
        @media
            -- Only screen sta per il vp dello schermo

## [1.0.0] - 2020-07-13
### Added 'JAVASCRIPT'
    - Si innesta nel browser
    - <script></script> all'interno del flusso HTML, di solito va inserito appena prima di </body> (parte finale del body)
    - Monitorare la compatibilità con altri browser 
    - Polyfill (https://polyfill.io/)
    - Gestire il codice js in vari file esterni ci permette di gestire al meglio la logica delle pagine
    - async, defer
    - Se richiamo più file js esterni, posso farlo e vale la sequenzialità dei richiami, cioè il primo file richiamato viene di solito eseguito prima
    - Utilizzando l'attributo src non posso inserire codice all'interno dello stesso tag <script>
    - Commenti: //in una riga --- /* in più righe  */
    - Mettere sempre il ; (punto e virgola)
    - Non usare var, ma 'let' e 'const' che sono parole-chiave attuali
    - = -> operatore di assegnamento
    - "use strict" si mette sempre all'inizio
    - Variabile "const" rimane constante appunto nel tempo, che non si possono modificare
    - Sintassi camel-case per le variabili i cui valori non sono conosciuti a priori e calcolati in run-time
    - Tipi di dati
        Range di Number -> da -2^52 a 2^53
    - Concatenazione
    - Importanza di `` (backtick)


## [1.0.0] - 2020-07-10
### Added 'HTML5'
    - Supporto dei formati video MP4, WebM e OGG 
        <video> con child <source src="">
    - Supporto dei formati audio MP3, WAV e OGG
    - Geolocation API

## [1.0.0] - 2020-07-09
### Added 'CSS3'
    - Position e top, right, left, bottom
        static: default
        relative: sposta l'elemento in relazione al posizionamento normale, spazio NON occupato
        fixed: sposta l'elemento in relazione al viewport, lo spazio lasciato dall'elemento viene occupato
        absolute: in relazione al primo genitore non statico posizionato più vicino
        sticky: aggiunto recentemente, quindi problemi di compatibilità con alcuni browser,
            posiziona l'elemento dopo lo scroll in sostanza
        tool per compatibilità regole: caniuse.com
        z-index: asse 3D che si allontana dallo schermo e si avvicina a noi 
            z-index A > z-index B -> z-index A va a coprire z-index B 
            z-index di default è = 0
        "margin: 0 auto" centra il mio blocco funziona solo se setto la width


## [1.0.0] - 2020-07-08
### Added 'HTML5'
    - Form <form>
        input e tipologia input
        label e attributi
        input radio collegati dall'attributo name=""
        Input di tipo submit è il button del form
        action="/pagina.php" rappresenta l'azione dopo il click del button submit e la pagina che addetta alla gestione dei dati, collegamento tra front-end e back-end
        target, stessa funzionalità del link
        method -> GET (che mostra i dati nel link) e POST (utile nella gestione di dati sensibili, i dati sono maggiormente protetti)
        select -> dropdown list
        textarea
        button -> <button type="button" onclick="alert{'Hello World!'}">Click me!</button>
        fieldset
        datalist
        

## [1.0.0] - 2020-07-07
### Added 'HTML5'
    - <iframe src="" title=""> incapsula l'html di un'altra pagina all'interno della nostra pagina
    - File paths: percorsi dei files, raccomandato l'uso di url relativi dove possibile
    - <head> può contenere i seguenti tag:
        <style>
        <link>
        <meta charset="">, <meta name="keywords" content="kw1, kw2, kw3">, <meta name="description" content="...">, <meta name="author" content="John Doe">
            <meta http-equiv="refresh" content="30">, <meta name="viewport" content="..."
    - Layout: tag di tipo semantico (utilizzati in Bootstrap)
        <header>
        <nav>
        <section>
        <article>
        <aside>
        <footer>
        <details>
        <summary>
        <figure> e <figcaption>
    - Approfondire
        Link nella slide APPROFONDIMENTI della lezione odierna
    - Tag Open Graph Facebook, tag ufficiali Google

## [1.0.0] - 2020-07-03
### Added 'CSS3'
    - Posizionamento
        display:inline o block o inline-block o none (https://www.w3schools.com/cssref/pr_class_display.asp)
        Inline -> padding e margin valgono per dx e sx
        Inline-block -> diversi blocchi sulla stessa linea
        display:none -> nasconde l'elemento e lo spazio lasciato viene occupato
        visibility:hidden -> nasconde l'elemento, ma lo spazio lasciato NON viene occupato
        calc()-> funzione css che effettua calcoli
        Caso in cui l'html tiene conto dello spazio tra </div> e <nav>
        vertical-align sui blocchi che vogliamo allineare verticalmente
    - Leggere da destra verso sinistra le regole
        h2 ~ div + p
    - Pseudo-classi -> :hover :active :focus o :funzione() :nth-child [n-esimo figlio di quell'elememento]  https://developer.mozilla.org/it/docs/Web/CSS/Pseudo-classes
    - Pseudo-elementi -> ::before ::after ::first-letter 
        ::after seleziona spazio DOPO un elemento, fa parte solo dell'elemento a cui si riferisce, ciò che aggiungiamo dopo non è presente nel DOM
        ::before seleziona spazio PRIMA un elemento, fa parte solo dell'elemento a cui si riferisce, ciò che aggiungiamo dopo non è presente nel DOM
    - Altro concetto sulla specificità: peso della regola, ogni selettore ha il proprio peso quantificato in numero
        Come ragiona il browser 0.0.0.0
        Se vuoi fregartene della specificità NON FARLO, ma se vuoi usa !important


## [1.0.0] - 2020-07-02
### Added 'HTML5'
    - Liste
        <ul> -> Unordered list 
        <ol> -> ordered list
            type= e start= attributi del tag ol
            Liste nidificate, in pratica le sottoliste: le liste nelle liste
        <li> -> list item all'interno delle liste
    - Blocchi più importanti del web
        div -> block-level usato come contenitori di altri elementi html
        span -> elemento inline usato come contenitore di un testo
    - Classi e ID
    - Breadcrumb: percorso di navigazione e buono in ottica SEO
    

## [1.0.0] - 2020-07-01
### Added 'CSS3'
    - Combinatori (combinators)
        h2 + p, adiacente: prendi 'p' che è subito dopo il 'h2'
            -- può servire nel caso di titolo, sottotitolo e paragrafo
        div p, discendente: seleziona TUTTI i 'p' discendenti all'interno di quel determinato 'div'
        h2 ~ (Alt+126) p, seguente non necessariamente adiacente: tutti i 'p' che vengono dopo il 'h2'
        div > p, child: le regole si applicano sul 'p' che è 'figlio' diretto del 'div'
    - Tool CSS reference: developer.mozilla.org
    - Compatibilità del browser: attualmente tutti o quasi i browser sono compatibili con le regole CSS
    - Box model modifica la struttura dei tag html
        Content - Padding - Border - Margin
        Margin collapse (vince il box con margin maggiore alto/basso) è una convenzione per evitare che blocchi html occupassero troppo spazio
        Shorthand properties: per esempio margin per scrivere regole su tutti i lati
            Padding 
                -- padding: 15px tutti i lati
                -- padding: 15px 30px sopra/sotto destra/sinistra
                -- padding: 15px 25px 35px sopra destra/sinistra sotto
                -- padding: 15px 25px 35px 65px senso orario da TOP
    - Link utile per valori default del CSS: https://www.w3schools.com/cssref/css_default_values.asp
    - Width in percentuale rispetto alla larghezza del blocco genitore
    - Height in percentuale rispetto al blocco che contiene (NON usare l'altezza in percentuale per evitare problemi di gestione)
    - box-sizing: border-box tiene conto del padding e border, relativo al problema della larghezza: width + padding + border

## [1.0.0] - 2020-06-30
### Added 'HTML5'
    - Link
        Attributo target:
            -- _self è di default, apre nello stesso frame  
            -- _parent apre il link nel parent frame
            -- _top apre il link nel body completo della finestra
            -- _blank apre in una nuova scheda
        Percorsi assoluti: dominio + parte finale dell'url
        Percorsi relativi: solo parte finale dell'url
        href="mailto:indirizzo email" nell'href con indirizzo email apre automaticamente il client predefinito di posta elettronica
        href="tel:numero di telefono" non è un valore ufficiale ma l'html lo legge e capisce che è un numero di telefono
    - Bookmark del link
        href="#Chapter3" soprattutto nei siti One-page, 'salti' all'elemento con id="Chapter3"
    - Tipologie di immagini, ottimizzate per il web
        APNG
        GIF 
        ICO 
        JPEG
        PNG 
        SVG 
    - Tabelle <table>
        Elemento riga: <tr>
        Elemento colonna: <td>
        Attributo colspan="2", va occupare ad esempio due colonne
        Attributo rowspan="3", va occupare ad esempio tre righe
        <caption> testo
        <colgroup> raggruppa le colonne
        <col> per applicare lo stile nelle colonne
        <thead> 'testa' della tabella
        <tbody> raccoglie il 'corpo' della tabella
        <tfoot> raccoglie la parte finale della tabella
    - Block-level e inline-level
        Block-level (elementi che rappresentano un blocco e vanno a capo):
            -- <div>
            -- <hr>
            -- <p>
            -- <h1>-<h6>
            -- <table>
            e altri 
        Inline-level (elementi in linea che non vanno a capo)
            -- <a>
            -- <img>
            -- <small>
            -- <br>
            -- <span>
            e altri

## [1.0.0] - 2020-06-29
### Added 'HTML5'
    - HTML non è case-sensitive, cioè non fa differenza tra minuscolo e maiuscolo, però è raccomandato il minuscolo
    - Attributi:
        alt -> SEO e accessibilità
        title -> SEO
    - em è un'unità di misura del carattere. 1em = 16px
    - Non utilizzare <p> per andare a capo (<br> o <hr>), solo per dividere in paragrafi
    - <pre> rispetta gli "a capo" che ho nel testo del codice
    - Semantica, in ottica SEO
        <strong> -> indica maggiore forza e peso del contenuto
        <em> -> enfatizzazione della parola
        <small> -> testo piccolo
        <mark> -> evidenzia
        <del> -> testo barrato -- <del datetime="anno_mese_giorno"> per aggiungere la data della cancellazione
        <ins> -> aggiunta
        <sub> -> pedice
        <sup> -> apice
        <blockquote cite="_fonte_esterna_"> -> citazione senza subire penalizzazioni da Google
        <q> -> per citazione con breve testo
        <cite> -> citazioni nel contesto artistico
        <abbr title="_nome_completo_"> -> abbreviazione
        <address> -> indirizzo
        <bdo dir="rtl"> -> direzione 'right to left', testo al contrario da dx a sx
        <code> -> formattato come riga di codice
    - Buona norma inserire commenti nel codice html, per spiegare/ricordarci cosa abbiamo fatto
        <!-- commento -->


## [1.0.0] - 2020-06-26
### Added 'Tecniche di progettazione e design'
    - Vue.js: framework (Angular js, React)
        Si basa sul pattern MVC
    - Gruppo Facebook 'Fatti di SEO' per discussioni approfondite sul SEO
    - 'Screaming Frog', 'SEMRush', 'SeoZoom' SEO Tool
    - Cache: expiration date, aggiornamento delle risorse in locale del sito frequentato
    - Unminify css tool


## [1.0.0] - 2020-06-25
### Added 'GIT'
    - Crittografia asimmetrica: chiave privata e chiave pubblica funzionano sempre assieme
    - SSH associata al profilo e alla macchina
    - Hosting GIT: github, bitbucket, gitlab
    - Tool README - linguaggio Markdown: https://stackedit.io/
    - License: MIT vs Apache vs GPL
        Tool creazione license: https://choosealicense.com/
    

## [1.0.0] - 2020-06-23
### Added 'Tecniche di progettazione e design'
    - Vecchiume del codice riguarda la degradabilità del codice stesso
    - GDPR: legge europea del 25 maggio 2018
        In generale, tutelarsi bene in materia di privacy. Occhi sempre aperti
        5 principi:
        Trasparenza: le condizioni di vendita/privacy sono descritte in maniera comprensibile
        Minimizzazione dati: i dati sono usati per una certa finalità, dati pertinenti
        Esattezza dei dati: i nostri dati devono essere sempre esatti. Da aggiornare quando necessario
        Conservazione: dati conservati per un certo periodo di tempo 
        Chi chiede dati all'utente deve sempre adeguarsi alla GDPR
        Diritto di accesso, rettifica, portabilità, recesso
        Nuova figura professionale DPO: Data Protection Officer
    - Security
        Attenzione alla vulnerabilità del front-end e back-end
        Cross-site scripting: javascript per bucare il sito
        SQL injection: bucare il database                


## [1.0.0] - 2020-06-22
### Added 'CSS3'
    - Test su console: cancellato tag head per vedere struttura html senza css associato
    - CSS inline: direttamente scritti nell'HTML (SCONSIGLIATO)
    - CSS rende il sito visivamente accettabile ed è importante per il posizionamento dei blocchi
    - 1996: css / 1998: css2 (responsive per i palmari industriali) / CSS3: funzionalità suddivise per micro-sezioni
    - CSS sostanzialmente è utilizzato dappertutto
    - Nel CSS il browser ignora l'errore e va avanti (tipo "colour" e non "color")
    - Le regole vanno nelle {}, se non chiudo la } è un errore che non viene 'parsato'
    - Non dimenticare il ; per dividere le regole
    - Con tag <style> richiamo di allungare il codice e si verificano effetti indesiderati
    - Nomenclatura file css: style.css, main.css, desktop.css (regole per dispositivi desktop), mobile.css (oer dispositivi mobile)
    - Richiamare file css esterno metodo migliore per gestire il css
    - CTRL + F5 aggiorna pagina e CACHE 
    - Macrocat. font: Serif 'aggraziato, con grazie' (font più abbelliti) e Sans Serif 'senza grazie' (font più crudi)
    - Il browser ha un default di proprietà, per esempio ha un default legato a 'sans-serif' | chrome://settings/fonts
    - Utilizziamo Google Fonts - https://fonts.google.com
    - Non differenze particolari tra @import e link html per importare, ma <link> carica più veloce perchè simultaneo
    - La regola scritta dopo vince QUASI sempre, se siamo sullo stesso livello di proprietà (per esempio sovrascrivere un ID con un altro colore)
    - Carattere fullback 'cursive' del font-family - esempio: ignora il Righteous, carica il corsivo
    - Selettori: tag div per esempio
    - Classi: class="classe", in css .classe mi seleziona tutte le classi nel mio HTML. Non univoca, indipendente dal tag
    - Id: è univoco, uno e un solo ID all'interno del mio elemento HTML
    - Attributi: per esempio disabled, viene visualizzato in grigino per divieto di un'azione (input:disabled)
    - Attr. globale: '*' seleziona tutto l'html, da usare RARAMENTE
    - Nomenclatura:
        -- FARE 
            almeno 2 caratteri
            iniziare con una lettera o un underscore_ o un trattino-
        -- NON FARE 
            non iniziare con un numero, due trattini-- o trattino- seguito da numero

    - Cascading: 'a cascata'
    - Inheritance (eredità): se le regole non si sovrascrivono, l'elemento eredita tutte le regole relativo a se stesso
    - Specificity: in caso di selettori differenti entra in gioco la specificità:
        Inline style > #ID > .classi:pseudo-classi[attributi] > <tag>::Pseudo-elementi > * > Default del browser
    - div.classe seleziona i div che hanno 'classe' come classe. Ulteriore esempio di specificità
    

## [1.0.0] - 2020-06-19
### Added 'HTML5'
    - Linguaggio di mark-up, non di programmazione. Struttura la pagina web
    - <!DOCTYPE html> tag che specifica HTML5 all'interno del browser
    - Identazione permette di poter leggere la pagina in maniera chiara 
    - W3C definisce lo standard per il corretto sviluppo dell' HTML w3.org
    - HTML5 è mobile first, cambiando l'approccio di sviluppo
    - Accessibilità ARIA, attributi DATA-*, API mobile
    - IDE, browser, debug, controllo e validazione di markup (validator.w3.org)
    - Non tutti i browser interpretano i comandi allo stesso modo, testare il proprio lavoro su diversi browser // Risorse (w3counter.com/globalstats.php / w3schools.com/browsers)
    - Edge diventato simile a Chrome, attenzione a Safari
    - CDN è un sistema di server distribuiti in tutto il mondo per velocizzare la connessione
    - Cache client e lato server
    - Rendering del browser
    - Un solo H1 per pagina


## [1.0.0] - 2020-06-18
### Added 'Tecniche di progettazione e design'
    - Principi design: da file .psd al front end
    - Style guide
    - Jakob Nielsen era anni fa unico punto di riferimento per certificare varie caratteristiche del sito.
    //
    - Sei principi UX di Norman e Nielsen:
    - AFFORDANCE: Invito, qualcosa che suggerisce l'azione
    - FEEDBACK: l'utente deve avere la percezione di aver fatto qualcosa e averne il FEEDBACK
    - SIGNIFICATO: per esempio il testo all'interno del button, il testo dà significato al button
    - MAPPING: Relazione tra le due cose, per esempio quando clicco il button apro una pop up. Il mapping è tra il button e l'azione successiva
    - MODELLO CONCETTUALE: identificare quel determinato in un modello concettuale e dargli significato, cioè quell'elememento deve fare quella cosa
        per esempio: posizione del button 'Acquista' di Amazon 
    - VINCOLI: gli spazi nei quali tutto deve assolutamente accadere, per esempio le dimensioni del button sono i vincoli del button stesso
    //     
    - Consistenza è la coerenza con la quale viene presentata un'interfaccia, in sostanza far capire all'utente come muoversi
    - Semplicità per arrivare a tutti, per esempio ridurre l'aspetto tecnico a livelli minimi
    - Tool di prototipazione: Photoshop, Sketch (wireframe)
    - Journey map: l'abitudine dell'utente su un certo sito
    - Gamification: far sì che il processo di attività all'interno di un sito sia divertente e catturare l'attenzione
    - Constraints: 'constringo' l'utente a fare le azioni che voglio
    - Way out: "via di fuga" per l'utente dalle constricts 
    - Il bug è sempre dietro l'angolo: risolvere assolutamente gli errori rossi della Console
    - UX: l'approccio di lavoro verso un'App è diverso da un Sito Responsive
    - Non cambiare troppo
    - Scopo della landing page: veicolare il messaggio in modo chiaro
    - index.html è il file di partenza di un web server nomesito.it
    - Folder dist (distributiion), folder src (source)
    - Pacchetti npm
    - il partial di qualcosa ha sempre un _ (underscore) davanti

## [1.0.0] - 2020-06-17
### Added 'GIT'
    - Typescript è un'evoluzione di Javascript
    - OT: Unix sistema operativo
    - GIT su Windows, c'è il terminale BASH
    - Branch iniziale di repository verrà rinominato da 'master' a 'main'
    - Approfondire GIT FLOW

## [1.0.0] - 2020-06-16
### Added 'Tecniche di progettazione e design'
    - Trasmettere sicurezza al cliente e smarcarsi dai dubbi
    - Diverse tipologie di siti: diversa area merceologica. Sito verticale è un sito che si occupa di un argomento specifico;
    orizzontale: tutto e senza specificità
    - Prima di affrontare un progetto, studiare e documentarsi sul cliente
    - E-commerce, blog (SEO), portfolio (verticalizzare vita professionale), landing page (con call-to-action), directory (esempio: siteswebdirectory.com)
    - Ricorsione (informatica): costrutto dove la funzione richiama se stessa
    - Link inbound (mio sito linkato da altri siti per rank Google)
    - Google è un crawler, spider (ha spazzato via siti di tipo directory)
    - Inspector o Ispeziona
    - DOM, nodi, attributi, tag (HTML)
    - Tag per SEO: title, meta description, h1
    - Tag semantici: article, header, span, p, footer
    - Tag itemgroup per accessibilità
    - Anteprime social: meta property
    - Console, parametro offuscato (nascosto con delle lettere), sezione Network (Preview): chiamate in background del sito
    - Network -> Headers: Status code HTTP, parametri Query String    
    - Postman (tool per API)
    - User-agent: Identificativo browser
    - Google Cloud Platform (Analytics, Search Console)
    - Tools: Gtmetrix.com (non fidarsi al 100%), PageSpeedInsights di Google, SheerSEO (simile ed alternativo ad Analytics)
    - Dev, Test, Produzione (codice minimizzato)
    - Il browser renderizza prima di tutto il testo
    - Elaborazione dei siti dipende dal processore

## [1.0.0] - 2020-06-15
### Added 'GIT'
    - Serve tutti i giorni
    - Simile a un file system
    - Stackoverflow social network per programmatori per risolvere problemi di programmazione (con sistema di voto per domande e risposta)
    - Open source: software che si può vedere pubblicamente, che si può testare e si può modificare per apportare migliorie
    - Ridondanza: più copie abbiamo, minore è la possibilità che abbiamo di perdere i dati
    - Funzione HASH (crittografia): a qualsiasi input viene generato un output particolare (esempio trasformare una stringa o un file di 1 GB)
    - Ad una password viene associata la propria HASH (per esempio SHA-1 = 40 caratteri)
    - Git flow: modello su come nominare e gestire i flussi di lavoro
    - Principio: avere un grosso problema e scomporlo in quanti più piccoli problemi possibili
    - Differenze tra repository locale e remoto
    - 'origin' si riferisce al repository remoto
    - Graph commit (esempio docente): pallino nero = commit, linee colorate = flussi di lavoro (branch)

## [1.0.0] - 2020-06-09
### Added 'Tecniche di progettazione e design'
    - Committare
    - Atteggiamento con cliente e raccolta informazioni
    - Strumenti per mappa concettuale (main topic e sub-topic) / Tools online: https://app.diagrams.net/ https://miro.com/
    - Slug: organizzazione url apprezzata da Google
    - Logiche di progettazione (per esempio posizione di un button per acquistare); ad ogni azione dell'utente corrisponde una reazione del programma
    - Tenere conto dei costi: budget cliente, quanto chiediamo
    - Gestione del tempo: differenze tra giornate lavorative e da calendario
    - Jira (gestione task), Confluence (gestione documenti)
    - In caso di difficoltà (per esempio ritardi consegna), argomentare e essere oggettivi
    - Strumenti da lavoro CRM: software composto da attività, milestones, files, diagramma Gantt, note, team, assegnazione task, ticket
    - ticket differente da task: il ticket riguarda un malfunzionamento; il task riguarda la programmazione di una nuova funzione (attenzione ai furbetti)
    - Trello per organizzazione lavoro: sistema a bacheca
    - Slack, software con chat real-time orientato alla condivisione delle informazioni del proprio lavoro. Può essere integrato con Trello e altre applicazioni di comunicazione
    - Associazione chiave-valore tramite array
    - JSON standard per rappresentare i dati

## [1.0.0] - 2020-06-08
### Added 'Tecniche di progettazione e design'
    - Chiarezza, trasparenza, evitare fraintendimenti (farsi scrivere tutto quello che serve), via di mezzo tra il professionale e il professionale
    - Proattività. Si può fare tutto, c'è sempre una soluzione al problema
    - Dotarsi di tablet o pc portatile per raccogliere appunti, no carta e penna
    - Proporsi ad una grande azienda: cv bello e chiaro
    - Curiosità: più tecnologie impariamo, più siamo performanti
    - Cosa sono DevOps, API, API REST, Sass, Less, JSON
    - Front end si occupa di ciò che gli arriva dal grafico (per esempio in HTML): precisione al 100% e pazienza
    - Lavoro tridimensionale: considerare tutti i dispositivi (Responsive)
    - JQuery è una libreria JS superata (a detta del founder), ma usata dal 90% dei siti globali quindi va studiato
    - Assimilare bene JS puro, è importante lato programmazione
    - Pattern MVC (Model-View-Controller)
    - (Full stack developer) Js (e librerie js), Nodejs e MongoDB connubio che garantisce un ottimo futuro professionale
    - Lavoro e tempo dedicati dietro alla funzione di un click, da far presente al cliente
    - Prendersi il giusto tempo per analizzare i vari fattori con il cliente, dimostrarsi meno banali possibili, fregarsene dei clienti onniscienti
    - Datevi un obiettivo, focus su cosa volete diventare
    - HTML e CSS si renderizzano lato client (in questo caso browser)
    - Semplicità: per esempio codice leggero (ottimizzazione)
    - Collaborare con aziende: aziende medio-grandi sono strutturate in maniera lineare e fai riferimento spesso al team leader
    - task (compito), qualcosa che vi viene assegnato e ci lavorate per un determinato tempo
    - Metodologia "agile" per controllare lo status del progetto, non per momitorare il comportamento delle persone,
    ma per tenere sotto controllo le difficoltà
    - Sprint sono degli intervalli di tempo (10 gg - 2 settimane) in cui si lavora su un determinato task, le attività vengono a 
    loro volta suddivise in sotto-task